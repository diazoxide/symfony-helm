# Default values for diazoxide-symfony.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

frankenphp:
  image:
    repository: "api-example.local/diazoxide-symfony/frankenphp"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  appEnv: prod
  appDebug: "0"
  appSecret: ""
  corsAllowOrigin: "^https?://.*?\\.api-example\\.local$"
  trustedHosts: "^127\\.0\\.0\\.1|localhost|.*\\.api-example\\.local$"
  trustedProxies:
    - "127.0.0.1"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"
  host: "api-example.local"
  jwt:
    secretKey: ""
    publicKey: ""
    passphrase: ""
  secrets: 
    SOME_SECRET_1: "somevalue_1"
    SOME_SECRET_2: "somevalue_2"
  env: 
    SOME_ENV: "somevalue"
  
  startupProbe:
      httpGet:
          path: /metrics
          port: metrics
      failureThreshold: 40
      periodSeconds: 3
  readinessProbe:
      httpGet:
          path: /metrics
          port: metrics
      periodSeconds: 3
  livenessProbe:
      httpGet:
          path: /metrics
          port: metrics
      periodSeconds: 3
  
  jobs: []
#      - name : "demo"
#        hooks: [ post-install, post-upgrade ]
#        hookDeletePolicy: before-hook-creation
#        command: ["sleep"]
#        args: ["5"]
  cronJobs: []
#      - name: "demo" 
#        schedule: "*/10 * * * *"
#        command: ["sleep"]
#        args: ["5"]
  messenger:
    enabled: false
#      - name: fixtures
#        hooks: ["post-install", "post-upgrade"]
#        command: ['/bin/sh', '-c']
#        args: ["composer install --prefer-dist --no-progress --no-interaction && bin/console doctrine:fixtures:load --no-interaction"]
#        hookDeletePolicy: before-hook-creation

pwa:
  image:
    repository: "api-example.local/diazoxide-symfony/pwa"
    pullPolicy: IfNotPresent
    tag: "latest"

# You may prefer using the managed version in production: https://mercure.rocks
mercure:
  publicUrl: https://api-example.local/.well-known/mercure
  # Change me!
  jwtSecret: "!ChangeThisMercureHubJWTSecretKey!"
  extraDirectives: cors_origins http://api-example.local https://api-example.local

# Full configuration: https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  # If false, then url will be used to configure the database connection
  enabled: false
  # To use an external PostgreSQL instance, set enabled to false and configure the external host
  url: postgresql://diazoxide-symfony:!ChangeMe!@database:5432/api?serverVersion=13&charset=utf8
  global:
    postgresql:
      auth:
        username: "example"
        password: "!ChangeMe!"
        database: "api"
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  primary:
    persistence:
      enabled: true
      storageClass: standard
      size: 1Gi
    pullPolicy: IfNotPresent
    image:
      repository: bitnami/postgresql
      tag: 14
    resources:
      requests:
        memory: 50Mi
        cpu: 1m

redis:
    # If false, then url will be used to configure the redis connection
    enabled: true
    # To use an external redis instance, set enabled to false and configure the external host
    url: redis://redis:6379
    auth:
        enabled: false
    master:
        persistence:
            enabled: true
            size: 10Gi
        disableCommands: []
    replica:
        persistence:
            enabled: true
            size: 10Gi

external-dns:
    enabled: false
    domainFilters:
        - api-example.local
    provider: cloudflare
    cloudflare:
        apiToken: ""
    zoneIdFilters: []
    rbac:
        create: true

imagePullSecrets:
  - name: test-regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  annotations: {}
  port: 80

pwaService:
    type: ClusterIP
    annotations: {}
    port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api-example.local
      paths:
          - path: /
            pathType: Prefix
      pwaHost: false
    - host: frontend-example.local
      paths:
          - path: /
            pathType: Prefix
      pwaHost: true
  tls: []
  #  - secretName: api-example-tls
  #    hosts:
  #      - api-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# If you use Mercure, you need the managed or the On Premise version to deploy more than one pod: https://mercure.rocks/docs/hub/cluster
replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
